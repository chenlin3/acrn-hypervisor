From a6b2bd1e047048eca55e8fa63950fa3729be366e Mon Sep 17 00:00:00 2001
From: Chaohong guo <chaohong.guo@intel.com>
Date: Wed, 23 May 2018 01:10:15 +0800
Subject: [RFC:test 7/7] Script to download OVMF firmware to local docker
 environment

The script tries to download the latest OVMF firmware to be used by
QEMU, which we can use it to test ACRN on QEMU/OVMF emulcation.

Signed-off-by: Chaohong guo <chaohong.guo@intel.com>
---
 test/6-download-ovmf.sh | 44 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)
 create mode 100755 test/6-download-ovmf.sh

diff --git a/test/6-download-ovmf.sh b/test/6-download-ovmf.sh
new file mode 100755
index 0000000..39fa89d
--- /dev/null
+++ b/test/6-download-ovmf.sh
@@ -0,0 +1,44 @@
+#!/bin/bash
+# 
+
+
+# This volume on host system, and has been mounted into acrn-dev docker
+[ -z ${ACRN_MNT_VOL} ] && ACRN_MNT_VOL=/acrn-vol
+[ -z ${ACRN_ENV_VARS} ] && ACRN_ENV_VARS=acrn-env.txt
+cd ${ACRN_MNT_VOL} || { echo "Failed to cd "${ACRN_MNT_VOL}; exit -1; }
+
+[ -f ${ACRN_ENV_VARS} ] && \
+	                { for line in `cat ${ACRN_ENV_VARS}`; do export $line; done; }
+
+[ -z ${ACRN_DISK_IMAGE} ] && ACRN_DISK_IMAGE=./clear_rootfs.img
+
+URL_EDK2="https://www.kraxel.org/repos/jenkins/edk2"
+echo "Trying to access " ${URL_EDK2} " to get OVMF.fd"
+
+# Get the string:  <a href="edk2.git-ovmf-x64-0-20180508.84.g7cd8a57599.noarch.rpm">
+STR_HREF=`curl -L ${URL_EDK2} | grep -Pioe "<a *href *= *\"edk2.git-ovmf-x64.*?</a>"  | \
+	grep -Pioe "edk2.git-ovmf-x64.*?\">"`
+[ -z ${STR_HREF} ] && { echo "Failed to get OVMF URL"; exit 1; }
+
+OVMF_RPM=${STR_HREF::-2}
+
+
+if [ -f ${OVMF_RPM} ]; then
+      echo "The rpm package exists. Use the olde one."
+else
+	wget -c ${URL_EDK2}/${OVMF_RPM}
+fi;
+[ -f ${OVMF_RPM} ] || echo "Failed to download OVMF rpm: " ${URL_EDK2}/${OVMF_RPM}
+
+rpm2cpio ${OVMF_RPM} | cpio -idvm 
+
+OVMF_FD=`find ./usr | grep OVMF-pure-efi.fd`
+
+[ -f ${OVMF_FD} ] || { echo "Failed to get OVMF file from rpm package"; exit -1; }
+
+cp ${OVMF_FD} .
+
+export ACRN_UEFI_FW=`basename ${OVMF_FD}`
+
+env | grep ACRN > ${ACRN_MNT_VOL}/${ACRN_ENV_VARS}
+
-- 
2.14.1

