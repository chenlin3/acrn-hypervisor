From d06aee223b9aa042c26e2855f97569d7bd8f2b55 Mon Sep 17 00:00:00 2001
From: Chaohong guo <chaohong.guo@intel.com>
Date: Wed, 23 May 2018 00:59:20 +0800
Subject: [RFC:test 2/7] Test script for build a clearlinux docker in local
 system

The script tries to docker pull clearlinux-sdk image from docker hub and
create a docker to be used to build ACRN source and sos kernel.

Signed-off-by: Chaohong guo <chaohong.guo@intel.com>
---
 test/1-setup-clearlinux-docker.sh | 68 +++++++++++++++++++++++++++++++++++++++
 1 file changed, 68 insertions(+)
 create mode 100755 test/1-setup-clearlinux-docker.sh

diff --git a/test/1-setup-clearlinux-docker.sh b/test/1-setup-clearlinux-docker.sh
new file mode 100755
index 0000000..2b6dbf1
--- /dev/null
+++ b/test/1-setup-clearlinux-docker.sh
@@ -0,0 +1,68 @@
+#!/bin/bash
+
+#
+# This script is expected to run in ClearLinux host or docker developement
+# environment. Make sure system has the following commands before executing 
+#     wget, sha512sum, grep, xz, basename, dirname,
+#     dd, fdisk, losetup, mkfs.vfat, mkfs.ext3, mount, umount,
+#
+# https_proxy=http://example.com:999
+# Respect the shell environment https_proxy in Docker
+[ -z ${https_proxy} ] || PROXY_CONF="-e https_proxy="${https_proxy}
+
+
+# This is the volume on host system, and will be mounted into docker
+# "-v ${ACRN_HOST_DIR}:${ACRN_MNT_VOL}. We "git clone" all ACRN repos, 
+# and then build disk image there in docker. Make sure that it has 30GB
+# space since disk image will be created there.
+[ -z ${ACRN_HOST_DIR} ] && ACRN_HOST_DIR=/home/${USER}/vdisk
+[ -z ${ACRN_MNT_VOL} ] && ACRN_MNT_VOL=/acrn-vol
+[ -z ${ACRN_DOCKER_NAME} ] && ACRN_DOCKER_NAME=acrn-dev
+[ -z ${ACRN_ENV_VARS} ] && ACRN_ENV_VARS=acrn-env.txt
+
+# The mage which will be pulled from hub.docker.com to create a container
+# to build ACRN source code.
+[ -z ${DOCKER_IMAGE} ] && DOCKER_IMAGE=clearlinux/clr-sdk
+
+# Create the dir if doesn't exsit
+mkdir -p ${ACRN_HOST_DIR}
+
+env | grep ACRN_  > ${ACRN_HOST_DIR}/${ACRN_ENV_VARS}
+
+is_container_name_conflict() {
+	RET=`docker ps -a -q --format='{{.Names}}' | grep ${ACRN_DOCKER_NAME}`
+	if [ ${RET}X == ${ACRN_DOCKER_NAME}X ]; then
+		echo "Container exsits or name conflict: "${ACRN_DOCKER_NAME}; 
+		return 1
+	fi;
+	return 0;
+}
+
+is_container_name_conflict
+[ $? -ne 0 ] && exit 1
+
+# copy scripts into the folder which will be mounted into container
+[ `pwd` != ${ACRN_HOST_DIR} ] && cp *.sh ${ACRN_HOST_DIR}/
+
+
+# if local image exist; don't download it again unless it has "latest" tag
+docker inspect ${DOCKER_IMAGE} > /dev/null
+if [ $? -ne 0 ] || [ ${DOCKER_IMAGE##*:}X != "latestX" ]; then
+	docker pull ${DOCKER_IMAGE}
+else
+	echo "Image is in local repo."
+fi;
+
+
+# Need to access /dev/loopX device, privileged is required :(
+docker create -it -v /dev:/dev/ --privileged --name=${ACRN_DOCKER_NAME} \
+	-v ${ACRN_HOST_DIR}:${ACRN_MNT_VOL} --net=host \
+	-e "ACRN_MNT_VOL=${ACRN_MNT_VOL}" ${PROXY_CONF} \
+	-e "ACRN_ENV_VARS=${ACRN_ENV_VARS}" \
+	--entrypoint "/bin/bash" clearlinux/clr-sdk
+
+docker start ${ACRN_DOCKER_NAME} && exit 0;
+
+exit 1;
+
+# docker attach ${ACRN_DOCKER_NAME}
-- 
2.14.1

